- id: doorunlocked
  alias: "Door Unlocked"
  trigger:
    - platform: state
      entity_id: lock.back_door_locked
      to: 'unlocked'
      from: 'locked'
    - platform: state
      entity_id: lock.garage_door_locked
      to: 'unlocked'
      from: 'locked'
    - platform: state
      entity_id: lock.front_door_locked
      to: 'unlocked'
      from: 'locked'
  action:
    service: notify.primary_contact
    data_template:
      message: "{{ trigger.to_state.attributes.friendly_name }} has been UNLOCKED"

- id: dooropened
  alias: "Door Opened"
  trigger:
    - platform: state
      entity_id: binary_sensor.back_door
      to: 'on'
      from: 'off'
    - platform: state
      entity_id: binary_sensor.front_door
      to: 'on'
      from: 'off'
    - platform: state
      entity_id: binary_sensor.garage_door
      to: 'on'
      from: 'off'
  action:
    service: notify.primary_contact
    data_template:
      message: "{{ trigger.to_state.attributes.friendly_name }} has been OPENED"

- id: setmorningmode
  alias: 'Morning Mode'
  trigger:
    platform: sun
    event: sunrise
    offset: '+00:00:00'
  action:
    - service: script.morning_mode

- id: setdaymode
  alias: 'Day Mode'
  trigger:
    platform: time
    at: '08:00:00'
  condition:
    - condition: state
      entity_id: binary_sensor.workday_sensor
      state: 'on'
  action:
    - service: script.day_mode

- id: setweekendmode
  alias: 'Weekend Mode'
  trigger:
    platform: time
    at: '08:00:00'
  condition:
    - condition: state
      entity_id: binary_sensor.workday_sensor
      state: 'off'
  action:
    - service: script.weekend_mode

- id: seteveningmode
  alias: 'Evening Mode'
  trigger:
    platform: sun
    event: sunset
    offset: '+00:00:00'
  action:
    - service: script.evening_mode

- id: setnightmode
  alias: 'Night Mode'
  trigger:
    platform: time
    at: '21:00:00'
  condition:
    - condition: state
      entity_id: input_boolean.guest_mode
      state: 'off'
  action:
    - service: script.night_mode

- id: setawaymode
  alias: 'Away Mode'
  trigger:
    platform: state
    entity_id: group.family
    to: 'not_home'
    for:
      minutes: 10
  condition:
    - condition: state
      entity_id: group.family
      state: 'not_home'
    - condition: state
      entity_id: input_boolean.guest_mode
      state: 'off'
  action:
    - service: script.away_mode

- id: updatenotice
  alias: 'Update Available Notifications'
  trigger:
    platform: state
    entity_id: updater.updater
  action:
    service: notify.primary_contact
    data:
      message: 'Update for Home Assistant is available.'