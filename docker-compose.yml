version: '3.7'

services:

  traefik:
    image: traefik:latest
    container_name: traefik
    restart: always
    networks:
      - default
      - traefik_proxy
    ports:
      - "80:80"
      - "443:443"
#      - "8080:8080"
    labels:
      - "traefik.enable=true"
      - "traefik.backend=traefik"
#      - "traefik.frontend.rule=Host:traefik.fuzzyblender.com"  
      - "traefik.frontend.rule=Host:nuc.fuzzyblender.com; PathPrefixStrip: /traefik"
      - "traefik.port=8080"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=fuzzyblender.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /srv/traefik:/etc/traefik
      - /srv/certs:/srv/certs
  
  homeassistant:
    container_name: homeassistant
    image: homeassistant/home-assistant:latest
    ports:
      - "8123:8123"
    restart: always
    depends_on:
      - postgres
      - influxdb
      - mosquitto
    volumes:
      - /srv/home-assistant:/config
      - /srv/certs:/srv/certs
    
  postgres:
    container_name: postgres
    image: postgres:alpine
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - /srv/certs:/srv/certs
    environment:
      POSTGRES_USER: homeassistant
      POSTGRES_PASSWORD: homeassistant
  
  mosquitto:
    container_name: mosquitto
    image: eclipse-mosquitto:latest
    ports:
      - "1883:1883"
      - "8883:8883"
    restart: always
    volumes:
      - /srv/certs:/srv/certs
      - /srv/mosquitto/data:/mosquitto/data
      - /srv/mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf:ro
      - /srv/mosquitto/log:/mosquitto/log

  honeywell2mqtt:
    container_name: honeywell2mqtt
    image: chriskacerguis/honeywell2mqtt:2.0.0
    restart: always
    privileged: true
    depends_on:
      - mosquitto
    environment:
      MQTT_HOST: mosquitto

  influxdb:
    container_name: influxdb
    image: influxdb:alpine
    ports:
      - "8086:8086"
    restart: always
    volumes:
      - influxdb_data:/var/lib/influxdb
      - /srv/influxdb/influxdb.conf:/etc/influxdb/influxdb.conf:ro
      - /srv/certs:/srv/certs
    environment:
      INFLUXDB_DB: home_assistant

  adminer:
    container_name: adminer
    image: adminer
    restart: always
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=adminer"
#      - "traefik.frontend.rule=Host:traefik.fuzzyblender.com"  
      - "traefik.frontend.rule=PathPrefixStrip: /adminer"
      - "traefik.port=8080"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=fuzzyblender.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"

  glances:
    container_name: glances
    image: nicolargo/glances
    restart: always
    networks:
      - traefik_proxy
    pid: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      GLANCES_OPT: -w
    labels:
      - "traefik.enable=true"
      - "traefik.backend=glances"
#      - "traefik.frontend.rule=Host:glances.fuzzyblender.com"  
      - "traefik.frontend.rule=PathPrefixStrip: /glances"
      - "traefik.port=61208"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=fuzzyblender.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"

  portainer:
    image: portainer/portainer
    container_name: portainer
    restart: always
    command: -H unix:///var/run/docker.sock
#    ports:
#      - "XXXX:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /srv/portainer/data:/data
    environment:
      - TZ=America/Chicago
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=portainer"
#      - "traefik.frontend.rule=Host:portainer.${DOMAINNAME}"  
      - "traefik.frontend.rule=PathPrefixStrip: /portainer"
      - "traefik.port=9000"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=example.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"

volumes:
  postgres_data:
    name: postgres_data
  influxdb_data:
    name: influxdb_data

networks:
  traefik_proxy:
    name: traefik_proxy
  default:
    driver: bridge