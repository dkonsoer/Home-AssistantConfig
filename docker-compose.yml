version: '3.7'

services:

  # Traefik Reverse Proxy
  traefik:
    image: traefik:alpine
    container_name: traefik
    domainname: ${DOMAINNAME}
    restart: always
    networks:
      - default
      - traefik_proxy
    ports:
      - "80:80"
      - "443:443"
      #- "8080:8080"
    labels:
      - "traefik.enable=true"
      - "traefik.backend=traefik"
      #- "traefik.frontend.rule=Host:traefik.${DOMAINNAME}"  
      - "traefik.frontend.rule=Host:${DOMAINNAME}; PathPrefixStrip: /traefik"
      - "traefik.port=8080"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${USERDIR}/traefik:/etc/traefik
      - ${USERDIR}/shared:/shared
  
  # Home Assistant
  homeassistant:
    container_name: homeassistant
    image: homeassistant/home-assistant:latest
#    ports:
#      - "8123:8123"
    restart: always
    depends_on:
      - postgres
      - influxdb
      - mosquitto
    volumes:
      - ${USERDIR}/home-assistant:/config
      - ${USERDIR}/shared:/shared
    labels:
      - "traefik.enable=true"
      - "traefik.backend=homeassistant"
      #- "traefik.frontend.rule=PathPrefixStrip: /hass"
      - "traefik.frontend.rule=Host:hass.${DOMAINNAME}"  
      - "traefik.port=8123"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"

  postgres:
    container_name: postgres
    image: postgres:alpine
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - ${USERDIR}/postgres:/var/lib/postgresql/data
      - ${USERDIR}/shared:/shared
    environment:
      POSTGRES_USER: homeassistant
      POSTGRES_PASSWORD: homeassistant
  
  mosquitto:
    container_name: mosquitto
    image: eclipse-mosquitto:latest
    ports:
      - "1883:1883"
      - "8883:8883"
      - "9001:9001"
    restart: always
    volumes:
      - ${USERDIR}/mosquitto/data:/mosquitto/data
      - ${USERDIR}/mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf:ro
      - ${USERDIR}/mosquitto/log:/mosquitto/log
      - ${USERDIR}/shared:/shared

  honeywell2mqtt:
    container_name: honeywell2mqtt
    image: chriskacerguis/honeywell2mqtt:2.0.0
    restart: always
    privileged: true
    depends_on:
      - mosquitto
    environment:
      MQTT_HOST: mosquitto

  influxdb:
    container_name: influxdb
    image: influxdb:alpine
    ports:
      - "8086:8086"
    restart: always
    volumes:
      - ${USERDIR}/influxdb:/var/lib/influxdb
      - ${USERDIR}/influxdb/influxdb.conf:/etc/influxdb/influxdb.conf:ro
      - ${USERDIR}/shared:/shared
    environment:
      INFLUXDB_DB: home_assistant

  # Adminer - WebUI for DBs
  adminer:
    container_name: adminer
    image: adminer
    restart: always
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=adminer" 
      - "traefik.frontend.rule=PathPrefixStrip: /adminer"
      - "traefik.port=8080"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"

  # Glances - Keep an eye on things
  glances:
    container_name: glances
    image: nicolargo/glances:latest-alpine
    restart: always
    networks:
      - traefik_proxy
    pid: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      GLANCES_OPT: -w
    labels:
      - "traefik.enable=true"
      - "traefik.backend=glances"
      - "traefik.frontend.rule=PathPrefixStrip: /glances"
      - "traefik.port=61208"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"

  # Portainer - WebUI for Containers
  portainer:
    image: portainer/portainer
    container_name: portainer
    restart: always
    command: -H unix:///var/run/docker.sock
    #ports:
      #- "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${USERDIR}/portainer/data:/data
    environment:
      - TZ=${TZ}
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=portainer"
      - "traefik.frontend.rule=PathPrefixStrip: /portainer"
      - "traefik.port=9000"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"

# Watchtower - To auto-update the containers
  watchtower:
    container_name: watchtower
    hostname: watchtower
    restart: always
    image: v2tec/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --schedule "0 0 4 * * *" --cleanup

# Networks that are needed
networks:
  traefik_proxy:
    name: traefik_proxy
  default:
    driver: bridge